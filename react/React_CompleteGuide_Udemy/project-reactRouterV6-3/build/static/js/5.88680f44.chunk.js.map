{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,MAAQ,gC,mFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAAM,UAC/B,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,WAGzB,E,wBCqCeC,UAtCK,WAClB,IAEQC,EAFOC,cAEPD,QAER,EAA0DE,YACxDC,KACA,GAFMC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAcC,EAAW,EAAjBC,KAAmBC,EAAK,EAALA,MAShD,OAJAC,qBAAU,WACRL,EAAYJ,EACd,GAAG,CAACI,EAAaJ,IAEF,YAAXK,EAEA,qBAAKX,UAAU,WAAU,SACvB,cAACgB,EAAA,EAAc,MAKjBF,EACK,mBAAGd,UAAU,WAAU,SAAEc,IAG7BF,EAAYT,KAKf,eAAC,WAAQ,WACP,cAAC,EAAgB,CAACA,KAAMS,EAAYT,KAAMC,OAAQQ,EAAYR,SAC9D,cAAC,IAAM,OANF,+CASX,C","file":"static/js/5.88680f44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1k28D\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}